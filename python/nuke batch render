import nuke
import threading

sf = ""
ef = ""

fram_01 = 0
alpha = 0
delta = 0


a = nuke.root().firstFrame()
b = nuke.root().lastFrame()

def allotFrames():
	eachSlot = ((b - a) + 1) / 8
	lastSlot = ((b - a) + 1) % 8

	for i in range(0,8):
		arr.append(eachSlot)
	
	sw1 = 0

	for i in range(0,8):
		print 'i ',i,'\n'
		for k in range(0,lastSlot):
			print 'k ', k,'\n'
			arr[i] = arr[i] + k + 1
			if ((i+1)== lastSlot):
				print 'i == lastslot'
				sw1 = 1
			print 'finished one round '
			break

		if (sw1 == 1):
			print 'finished another round '
			break
	return arr

def batchrender(num, sf, ef):
	"""thread worker function"""
	os.system("Nuke6.3.exe -ixfm 1 \"D:/n..u..k..e/Batch_Test.nk\" "+ str(sf) + "," + str(ef) + ",1" + "\"")
	return


arr = allotFrames()
threads = []
for i in range(8):
	print 'arr[i] ',arr[i],'\n'
	delta = arr[i]
	var1 = fram_01 + alpha + 1
	var2 = alpha + delta 
	print 'var1 ',var1 ,'\n'
	print 'var2 ',var2 ,'\n'
	t = threading.Thread(target=batchrender, args=(i,sf,ef,))
	threads.append(t)
	t.start()
	alpha = alpha + arr[i]
